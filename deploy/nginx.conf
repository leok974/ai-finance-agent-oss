events {}

http {
    log_format main '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent ' \
                                    'rt=$request_time urt=$upstream_response_time ua="$http_user_agent"';
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    sendfile on;
    keepalive_timeout 65s;
    server_tokens off;

    # Compression (only for text-based content)
    gzip on;
    gzip_comp_level 5;
    gzip_types text/plain text/css application/javascript application/json application/xml+rss image/svg+xml;
    gzip_min_length 512;

    # Security headers (edge-level; web container stays minimal)
    map $http_upgrade $upgrade_header { default upgrade; '' close; }

    # Docker embedded DNS for dynamic container IP resolution
    resolver 127.0.0.11 valid=30s ipv6=off;

    # Indirection variables allow nginx to start even if name not yet resolvable at master process init
    map $host $backend_upstream { default backend:8000; }
    map $host $web_upstream { default web:8080; }
    map $host $agui_upstream { default agui:3030; }

    server {
        listen 80;

        # Legacy auth path redirect (ensure clients hitting /auth/* get /api/auth/*)
        location ^~ /auth/ {
            return 308 /api$uri$is_args$args;
        }

        # Primary API prefix – forward essential proxy headers for correct cookie domain/scheme logic
        location /api/ {
            proxy_pass http://$backend_upstream/;
            proxy_set_header Host              $host;
            proxy_set_header X-Forwarded-Host  $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port  $server_port;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_pass_header X-LLM-Path;
        }

        # Health & version
        location = /_up { return 204; access_log off; }
        location = /_version {
            default_type application/json;
            try_files /version.json =404;
            add_header Cache-Control "no-store";
        }

        # Additional backend paths (outside canonical /api/ prefix) – kept for backward compatibility
        location ~* ^/(agent|ingest|llm|analytics|charts|txns|transactions|unknowns|overview|summary|expanded|merchants|spending_trends|dashboard|models|rules|ml|stats|report|docs|openapi\.json|healthz|ready) {
            proxy_pass http://$backend_upstream$request_uri;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Host  $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port  $server_port;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_pass_header X-LLM-Path;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # AG UI SSE stream
        location ^~ /agui/ {
            proxy_pass http://$agui_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
            proxy_buffering off;
            add_header X-Accel-Buffering no;
        }

        # Cache-bust index.html always; hashed assets long cache from web container
    location = /index.html { proxy_pass http://$web_upstream/index.html; add_header Cache-Control "no-store"; }
    location /assets/ { proxy_pass http://$web_upstream/assets/; add_header Cache-Control "public, max-age=31536000, immutable"; }

        # SPA fallback
        location / {
            proxy_pass http://$web_upstream/;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Edge-applied security headers (selective for HTML responses)
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header Referrer-Policy strict-origin-when-cross-origin;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()";
        add_header X-XSS-Protection "1; mode=block";
    }
}
