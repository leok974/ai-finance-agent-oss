server {
    listen 80;
    server_name _;

    # API-first blocks (ensure /auth wins)
    location ^~ /auth {
        proxy_pass http://backend:8000;
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Explicit agent routes (place BEFORE regex net)
    location ^~ /agent/ {
        proxy_pass http://backend:8000;
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 60s;
    }

    location ~* ^/(analytics|charts|txns|transactions|unknowns|overview|summary|expanded|merchants|spending_trends|dashboard|models|rules|ml|stats|report|docs|openapi\.json)(/|$) {
        proxy_pass http://backend:8000;
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Health passthroughs
    location = /healthz { proxy_pass http://backend:8000/healthz; }
    location = /ready  { proxy_pass http://backend:8000/ready;  }

    # SPA static root
    root /usr/share/nginx/html;

    # Serve favicon & assets directly if present
    location = /favicon.ico { try_files /favicon.ico =404; }
    location = /robots.txt  { try_files /robots.txt  =404; }

    # SPA fallback LAST. Avoid rewrite loops.
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Basic security headers (optional)
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header Referrer-Policy strict-origin-when-cross-origin;
}
