events {}

http {
    # Standard MIME types (ensures .js served as application/javascript etc.)
    include       /etc/nginx/mime.types;
    # Explicit common web types (defensive in case base image mime.types trimmed)
    types {
        application/javascript  js mjs;
        text/css                css;
        application/wasm        wasm;
        image/svg+xml           svg svgz;
        application/json        json map topojson;
        application/manifest+json webmanifest;
    }
    default_type  application/octet-stream;
    log_format main '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent ' \
                                    'rt=$request_time urt=$upstream_response_time ua="$http_user_agent"';
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    sendfile on;
    keepalive_timeout 65s;
    server_tokens off;

    # Compression (only for text-based content)
    gzip on;
    gzip_comp_level 5;
    gzip_types text/plain text/css application/javascript application/json application/xml+rss image/svg+xml;
    gzip_min_length 512;

    # Security headers (edge-level; web container stays minimal)
    map $http_upgrade $upgrade_header { default upgrade; '' close; }

    # Docker embedded DNS for dynamic container IP resolution
    resolver 127.0.0.11 valid=30s ipv6=off;

    # Indirection variables allow nginx to start even if name not yet resolvable at master process init
    map $host $backend_upstream { default backend:8000; }
    map $host $agui_upstream { default agui:3030; }

    # Basic rate limit zones (10 requests per minute per IP for auth endpoints)
    limit_req_zone $binary_remote_addr zone=authzone:10m rate=10r/m;

    server {
        listen 80;

        # --- Canonical host redirect (serve only app.ledger-mind.org) -----------------
        if ($host ~* ^(ledger-mind\.org|www\.ledger-mind\.org)$) {
            return 308 https://app.ledger-mind.org$request_uri;
        }

        # --- Global security headers --------------------------------------------------
        # Strong HSTS (1 year) + preload; adjust max-age or remove preload before submitting to hstspreload.org
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
        # Conservative CSP: tighten if you later add nonce/hashes or third-party domains
        add_header Content-Security-Policy "\n  default-src 'self';\n  script-src 'self';\n  style-src 'self' 'unsafe-inline';\n  img-src 'self' data: https:;\n  font-src 'self' data:;\n  connect-src 'self' https: wss:;\n  frame-ancestors 'none';\n" always;

        # Legacy auth path redirect (ensure clients hitting /auth/* get /api/auth/*)
        location ^~ /auth/ {
            return 308 /api$uri$is_args$args;
        }

        # Explicit auth mapping (ensure prefix strip works reliably on all methods)
        location ^~ /api/auth/ {
            # CORS preflight dedicated fast-path
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin $http_origin always;
                add_header Access-Control-Allow-Methods "GET,POST,OPTIONS" always;
                add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
                add_header Access-Control-Max-Age 86400 always;
                return 204;
            }
            limit_req zone=authzone burst=5 nodelay;
            # Rewrite /api/auth/... -> /auth/...
            rewrite ^/api/auth/(.*)$ /auth/$1 break;
            proxy_pass http://$backend_upstream;
            proxy_set_header Host              $host;
            proxy_set_header X-Forwarded-Host  $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port  $server_port;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Primary API prefix – forward essential proxy headers for correct cookie domain/scheme logic
        location /api/ {
            # CORS preflight fast-path
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin $http_origin always;
                add_header Access-Control-Allow-Methods "GET,POST,PUT,PATCH,DELETE,OPTIONS" always;
                add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
                add_header Access-Control-Max-Age 86400 always;
                return 204;
            }
            # IMPORTANT: Because proxy_pass uses a variable ($backend_upstream), nginx cannot
            # automatically strip the matched prefix even with a trailing slash. We explicitly
            # rewrite /api/<path> -> /<path> so backend sees root-relative routes (e.g. /status).
            rewrite ^/api/(.*)$ /$1 break;
            proxy_pass http://$backend_upstream;  # no trailing slash; path already rewritten
            proxy_set_header Host              $host;
            proxy_set_header X-Forwarded-Host  $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port  $server_port;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_pass_header X-LLM-Path;
        }

        # Health & version
        location = /_up { return 204; access_log off; }
        location = /_version {
            default_type application/json;
            try_files /version.json =404;
            add_header Cache-Control "no-store";
        }
        # Backend dynamic version endpoint (build metadata)
        location = /version {
            proxy_pass http://$backend_upstream/version;
            proxy_set_header Host              $host;
            proxy_set_header X-Forwarded-Host  $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port  $server_port;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Additional backend paths (outside canonical /api/ prefix) – kept for backward compatibility
        location ~* ^/(agent|ingest|llm|analytics|charts|txns|transactions|unknowns|overview|summary|expanded|merchants|spending_trends|dashboard|models|rules|ml|stats|report|docs|openapi\.json|healthz|ready) {
            proxy_pass http://$backend_upstream$request_uri;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Host  $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port  $server_port;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_pass_header X-LLM-Path;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # AG UI SSE stream
        location ^~ /agui/ {
            proxy_pass http://$agui_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
            proxy_buffering off;
            add_header X-Accel-Buffering no;
        }

        # Static assets (fingerprinted). Single consolidated matcher avoids fallback collisions.
        location ^~ /assets/ {
            root /usr/share/nginx/html;
            try_files $uri =404;
            access_log off;
            expires 1y;
            add_header Cache-Control "public, max-age=31536000, immutable";
        }

        # Explicit JS / MJS safeguard outside /assets if any top-level bundles emitted
        location ~* ^/.+\.(?:m?js)$ {
            root /usr/share/nginx/html;
            try_files $uri =404;
            access_log off;
            expires 1y;
            add_header Cache-Control "public, max-age=31536000, immutable";
            default_type application/javascript;
        }

        # Common static (fonts/images/etc.) at root (favicon, icons)
        location ~* ^/.+\.(?:css|map|woff2?|ttf|svg|png|jpg|jpeg|gif|webp|ico)$ {
            root /usr/share/nginx/html;
            try_files $uri =404;
            access_log off;
            expires 1y;
            add_header Cache-Control "public, max-age=31536000, immutable";
        }

        # Web App Manifest with correct MIME & modest cache
        location = /site.webmanifest {
            root /usr/share/nginx/html;
            try_files $uri =404;
            default_type application/manifest+json;
            add_header Content-Type application/manifest+json;
            expires 1h;
            add_header Cache-Control "public, max-age=3600";
        }

        # Build metadata (web) – always no-store so tests see current deployed image
        location = /build.json {
            root /usr/share/nginx/html;
            try_files $uri =404;
            default_type application/json;
            add_header Content-Type application/json;
            add_header Cache-Control "no-store, must-revalidate";
        }

        # WASM (if any emitted outside /assets)
        location ~* ^/.+\.wasm$ {
            root /usr/share/nginx/html;
            try_files $uri =404;
            access_log off;
            expires 1y;
            add_header Cache-Control "public, max-age=31536000, immutable";
            default_type application/wasm;
        }

        # Explicit index.html (avoid caching + ensure no SPA fallback recursion)
        location = /index.html {
            root /usr/share/nginx/html;
            try_files $uri =404;
            add_header Cache-Control "no-store";
        }

        # SPA fallback
        # --- Unified Help endpoint passthroughs (exact paths) ------------------
        # Direct /help for existing frontend fetch('/help') usage
        location = /help {
            proxy_pass http://$backend_upstream/help;
            proxy_set_header Host              $host;
            proxy_set_header X-Forwarded-Host  $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port  $server_port;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_pass_header X-LLM-Path;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }
        # Future-safe alias under canonical /api prefix
        location = /api/help {
            proxy_pass http://$backend_upstream/help;
            proxy_set_header Host              $host;
            proxy_set_header X-Forwarded-Host  $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port  $server_port;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_pass_header X-LLM-Path;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # SPA fallback: serve static file when path not found; only HTML falls back
        location / {
            root /usr/share/nginx/html;
            try_files $uri /index.html;
            add_header Cache-Control "no-store";
        }

        # Legacy selective per-HTML headers were consolidated into global block above.
    }
}
