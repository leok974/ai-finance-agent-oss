name: Backend Smoke

on:
  push:
    paths:
      - "apps/backend/**"
      - ".github/workflows/backend-smoke.yml"
  pull_request:
    paths:
      - "apps/backend/**"
      - ".github/workflows/backend-smoke.yml"

concurrency:
  group: backend-smoke-${{ github.ref }}
  cancel-in-progress: true

jobs:
  smoke:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: myuser
          POSTGRES_PASSWORD: mypassword
          POSTGRES_DB: finance
        ports:
          - "5432:5432"
        options: >-
          --health-cmd="pg_isready -U myuser -d finance"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20

    env:
      DATABASE_URL: postgresql+psycopg://myuser:mypassword@localhost:5432/finance
      PYTHONUNBUFFERED: "1"
      PYTHONPATH: "apps/backend"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install backend deps
        working-directory: apps/backend
        run: |
          python -m pip install --upgrade pip wheel
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          elif [ -f pyproject.toml ]; then
            pip install .
          else
            # Fallback (rare): install minimal runtime deps
            pip install fastapi uvicorn "psycopg[binary]" SQLAlchemy alembic pydantic
          fi

      - name: Wait for Postgres
        run: |
          for i in {1..40}; do
            pg_isready -h localhost -p 5432 -U myuser && echo "Postgres ready" && break
            echo "Waiting for Postgres..."
            sleep 2
          done

      - name: Alembic upgrade
        working-directory: apps/backend
        run: |
          python -m alembic upgrade head

      - name: Seed + backfill (demo data)
        working-directory: apps/backend
        run: |
          python -m app.scripts.dev_seed_and_backfill --replace

      - name: Start FastAPI (background)
        working-directory: apps/backend
        run: |
          nohup python -m uvicorn app.main:app --host 127.0.0.1 --port 8000 > uvicorn.log 2>&1 &
          # wait for server
          for i in {1..40}; do
            curl -sf http://127.0.0.1:8000/health || { echo "waiting api..."; sleep 2; continue; }
            echo "API is up"; break
          done

      - name: Smoke test (PowerShell)
        shell: pwsh
        run: |
          pwsh -File apps/backend/scripts/smoke-backend.ps1 -BaseUrl "http://127.0.0.1:8000"

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: backend-logs
          path: |
            apps/backend/uvicorn.log
