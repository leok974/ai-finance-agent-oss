[pytest]

# Root-level pytest configuration. We explicitly scope collection to the backend
# service to avoid descending into the embedded virtualenv (apps/backend/.venv)
# whose third-party packages ship their own test suites (previously producing
# >100 collection errors when running from repo root).

# Limit discovery to the backend application directory so only project tests run.
# Only collect our project's backend test suite (avoid traversing into the embedded
# virtual environment at apps/backend/.venv and third-party library test suites).
testpaths = apps/backend/tests

# Ensure the backend directory (which contains the "app" package) is on sys.path
# when tests are invoked from the repository root.
pythonpath = apps/backend

# Prevent recursion into virtual environments, node modules, build artifacts, etc.
norecursedirs = .* build dist node_modules .git .tox .venv venv */.venv apps/backend/.venv

# Align with backend-specific strictness & import behavior.
addopts = -q -ra --strict-markers --import-mode=importlib

markers =
    ml: ML suggestion flow tests
    agent_tools: agent tool endpoints
    budget: budget agent tools
    insights: insights agent tools
    charts: charts agent tools
    rules: rules agent tools
    rotation: key rotation flows
    crypto: encryption/crypto behavior
    needs_llm: requires live LLM connectivity
    needs_kms: requires configured KMS (cloud KMS)
    slow: long-running analytics tests
    order: execution ordering marker used in ML tests
    integration: cross-endpoint integration flow tests
    heavy: requires heavy deps (pandas/numpy/statsmodels) or large data
    httpapi: requires FastAPI/Starlette app or HTTP layer

# Suppress noisy third-party deprecations for lightweight root test lane.
filterwarnings =
    ignore:.*Please use `import python_multipart` instead.*:PendingDeprecationWarning:starlette\.
    ignore:.*Use 'content=<...>' to upload raw bytes/text content.*:DeprecationWarning:httpx\.