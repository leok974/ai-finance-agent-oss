services:
  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: finance
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser || exit 1"]
      interval: 3s
      timeout: 3s
      retries: 15
    restart: unless-stopped

  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./apps/backend:/app
      # GCP KMS service-account JSON on the host (adjust path if different)
      - C:/secrets/ledgermind-backend-sa.json:/secrets/gcp-sa.json:ro
    environment:
      APP_ENV: dev
      DATABASE_URL: postgresql+psycopg://myuser:${POSTGRES_PASSWORD}@postgres:5432/finance

      # Encryption / KMS
      ENCRYPTION_ENABLED: "1"
      GCP_KMS_KEY: projects/ledgermind-03445-3l/locations/us-east1/keyRings/ledgermind/cryptoKeys/kek
      GCP_KMS_AAD: app=ledgermind,env=dev
      GOOGLE_APPLICATION_CREDENTIALS: /secrets/gcp-sa.json

      # CORS / frontend
      CORS_ALLOW_ORIGINS: http://127.0.0.1:5173,http://localhost:5173,http://127.0.0.1:5174,http://localhost:5174
      FRONTEND_ORIGIN: http://127.0.0.1:5173

      # Demo/dev toggles (remove for prod)
      DEV_ALLOW_NO_AUTH: "1"
      DEV_ALLOW_NO_LLM: "1"
      DEMO_MODE: "1"
      DEMO_LOGIN_EMAIL: admin@local
      DEMO_LOGIN_PASSWORD: admin123
      DEMO_LOGIN_TOKEN: let-judges-in

      # LLM dev
      OPENAI_BASE_URL: http://host.docker.internal:11434/v1
      OPENAI_API_KEY: ollama
      MODEL: gpt-oss:20b

    depends_on:
      postgres:
        condition: service_healthy

    command: sh -lc "alembic -c /app/alembic.ini upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --proxy-headers"
    restart: unless-stopped

  web:
    build:
      context: ./apps/web
    command: sh -lc "pnpm install && pnpm vite --host"
    environment:
      CI: "true"
      VITE_API_BASE: http://127.0.0.1:8000
    depends_on:
      - backend
    ports:
      - "5173:5173"
    volumes:
      - ./apps/web:/app
      - web_node_modules:/app/node_modules
    restart: unless-stopped

  agui:
    build:
      context: ./elysia-agui-gateway
    environment:
      BACKEND_BASE: http://backend:8000
      PORT: 3030
    ports:
      - "3030:3030"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  pgdata:
  web_node_modules:
