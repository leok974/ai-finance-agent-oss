import { Page } from '@playwright/test';

const ACCOUNT_LOCATOR = '[data-testid="account-menu"], [data-test="account-menu"], [aria-label="Account"], [data-e2e="account-menu"], [data-testid="header-authenticated"]';

export async function ensureLoggedIn(page: Page) {
  // Rely on storage state generated by global-setup.ts. If the session is missing, fail fast
  // instead of retrying login flows that will hammer /api/auth/login.
  await page.goto('/', { waitUntil: 'networkidle' });

  const me = await page.request.get('/api/auth/me');
  if (!me.ok()) {
    const status = me.status();
    const snippet = await me.text().then((t) => t.slice(0, 160)).catch(() => '');
    throw new Error(`/api/auth/me returned ${status}. Ensure global-setup.ts produced a valid storage state. Body=${snippet}`);
  }

  const accountMenu = page.locator(ACCOUNT_LOCATOR).first();
  if (await accountMenu.isVisible().catch(() => false)) {
    return;
  }

  // Give the SPA one more render pass before failing.
  await page.reload({ waitUntil: 'networkidle' }).catch(() => {});
  if (await accountMenu.isVisible().catch(() => false)) {
    return;
  }

  throw new Error('Authenticated session detected but account UI not visible. Verify selectors or update ensureLoggedIn.');
}
